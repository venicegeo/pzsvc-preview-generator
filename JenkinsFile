@Library('pipelib@master') _

node {
  def mvn = tool 'M3'
  def root = pwd()

  stage('Setup') {
    git([
      url: "https://github.com/venicegeo/pzsvc-preview-generator",
      branch: "master"
    ])
  }

  stage('Archive') {
    sh """
      ${mvn}/bin/mvn clean package -U -Dmaven.repo.local=${root}
      cp target/pz-svcs-prevgen-*.jar ${root}/pz-svcs-prevgen.jar
    """
    mavenPush()
  }

  stage('Scans') {
//    dependencyCheck()
    ionConnect()
    sh """
      mkdir -p ${root}/.m2/repository
      ${mvn}/bin/mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install \
        -Dmaven.repo.local=${root}/.m2/repository \
        -Pcoverage-per-test org.jacoco:jacoco-maven-plugin:report \
        -DdataFile=target/jacoco.exec
    """
    sonar()
  }

  stage('CI Deploy') {
    sh """
      cp target/pz-svcs-prevgen-*.jar ${root}/pz-svcs-prevgen.jar
    """
    cfPush()
//    zap()
    cfBgDeploy()
  }

  stage('Integration Testing') {
    postman()
  }

  stage('Reset') {
    git([
      url: "https://github.com/venicegeo/pzsvc-preview-generator",
      branch: "master"
    ])
  }

  stage('Staging Deploy') {
    cfPush {
      cfDomain  = 'stage.geointservices.io'
      cfSpace   = 'stage'
    }
    cfBgDeploy {
      cfDomain  = 'stage.geointservices.io'
      cfSpace   = 'stage'
    }
  }

  stage('Final Scans') {
    sh """
      ${mvn}/bin/mvn install:install-file -Dmaven.repo.local=${root} -Dfile=pom.xml -DpomFile=pom.xml
    """
    fortify()
  }

  stage('Cleanup') {
    deleteDir()
  }
}
